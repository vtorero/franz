{"version":3,"sources":["webpack:///./library/angular-admin-lte/src/lib/form/input-group/input-group.component.html","webpack:///./library/angular-admin-lte/src/lib/form/input-group/input-group.component.ts","webpack:///./library/angular-admin-lte/src/lib/form/input-group/input-group.directive.ts","webpack:///./library/angular-admin-lte/src/lib/form/input-text/input-text.directive.ts","webpack:///./library/angular-admin-lte/src/lib/services/class.service.ts","webpack:///./src/app/+form/input-text/input-text-routing.module.ts","webpack:///./src/app/+form/input-text/input-text.component.html","webpack:///./src/app/+form/input-text/input-text.component.ts","webpack:///./src/app/+form/input-text/input-text.module.ts"],"names":[],"mappings":"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","file":"form-input-text-input-text-module-ngfactory.fc626ba862e233978b95.js","sourcesContent":["<div [ngClass]=\"wrapperClasses\" [mkColor]=\"currentColor || inputColor\" mkColorPrefix=\"has\">\r\n  <label *ngIf=\"label || inputGroupLabelDirective\">\r\n    {{label}}\r\n    <ng-content select=\"mk-input-group-label\"></ng-content>\r\n  </label>\r\n  <div *ngIf=\"addonLeft || inputGroupAddonLeftDirective || addonRight || inputGroupAddonRightDirective; else noAddon\" class=\"input-group\">\r\n    <span *ngIf=\"addonLeft || inputGroupAddonLeftDirective\" class=\"input-group-addon\">\r\n      {{addonLeft}}\r\n      <ng-content select=\"mk-input-group-addon-left\"></ng-content>\r\n    </span>\r\n    <ng-content select=\"mk-input-group-content\"></ng-content>\r\n    <span *ngIf=\"addonRight || inputGroupAddonRightDirective\" class=\"input-group-addon\">\r\n      {{addonRight}}\r\n      <ng-content select=\"mk-input-group-addon-right\"></ng-content>\r\n    </span>\r\n  </div>\r\n  <ng-template #noAddon><ng-content select=\"mk-input-group-content\"></ng-content></ng-template>\r\n</div>\r\n","import { AfterContentInit, Component, ContentChild, Input, OnDestroy } from '@angular/core';\r\n\r\nimport { removeSubscriptions } from '../../helpers';\r\n\r\nimport {\r\n  InputGroupAddonLeftDirective,\r\n  InputGroupAddonRightDirective,\r\n  InputGroupContentDirective,\r\n  InputGroupLabelDirective\r\n} from './input-group.directive';\r\n\r\nimport { InputTextDirective } from '../input-text/input-text.directive';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n/*\r\n *\r\n */\r\n@Component({\r\n  selector: 'mk-input-group',\r\n  templateUrl: './input-group.component.html'\r\n})\r\nexport class InputGroupComponent implements AfterContentInit, OnDestroy {\r\n  private subscriptions: Array<Subscription> = [];\r\n\r\n  public currentColor: string;\r\n  public currentFontColor: string;\r\n\r\n  @Input() addonLeft: string;\r\n  @Input() addonRight: string;\r\n  @Input() inputColor = 'default';\r\n  @Input() inputFontColor: string;\r\n  @Input() inputErrorColor = 'danger';\r\n  @Input() inputErrorFontColor: string;\r\n  @Input() inputValidColor = 'success';\r\n  @Input() inputValidFontColor: string;\r\n  @Input() label: string;\r\n  @Input() wrapperClasses = 'form-group';\r\n\r\n  @ContentChild(InputGroupLabelDirective) public inputGroupLabelDirective: InputGroupLabelDirective;\r\n  @ContentChild(InputGroupAddonLeftDirective) public inputGroupAddonLeftDirective: InputGroupAddonLeftDirective;\r\n  @ContentChild(InputGroupAddonRightDirective) public inputGroupAddonRightDirective: InputGroupAddonRightDirective;\r\n  @ContentChild(InputGroupContentDirective) public inputGroupContentDirective: InputGroupContentDirective;\r\n  @ContentChild(InputTextDirective) public inputTextDirective: InputTextDirective;\r\n\r\n  ngAfterContentInit() {\r\n    this.subscriptions.push(this.inputTextDirective.onKeyup.subscribe((value: NgControl) => {\r\n      if (value.invalid) {\r\n        this.currentColor = this.inputErrorColor;\r\n        this.currentFontColor = this.inputErrorFontColor;\r\n      } else if (!value.invalid) {\r\n        this.currentColor = this.inputValidColor;\r\n        this.currentFontColor = this.inputValidFontColor;\r\n      } else {\r\n        this.currentColor = this.inputColor;\r\n        this.currentFontColor = this.inputFontColor;\r\n      }\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    removeSubscriptions(this.subscriptions);\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n\r\n/*\r\n *\r\n */\r\n@Directive({\r\n  /* tslint:disable-next-line:directive-selector */\r\n  selector: 'mk-input-group-label'\r\n})\r\nexport class InputGroupLabelDirective {}\r\n\r\n/*\r\n *\r\n */\r\n@Directive({\r\n  /* tslint:disable-next-line:directive-selector */\r\n  selector: 'mk-input-group-addon-left'\r\n})\r\nexport class InputGroupAddonLeftDirective {}\r\n\r\n/*\r\n *\r\n */\r\n@Directive({\r\n  /* tslint:disable-next-line:directive-selector */\r\n  selector: 'mk-input-group-addon-right'\r\n})\r\nexport class InputGroupAddonRightDirective {}\r\n\r\n/*\r\n *\r\n */\r\n@Directive({\r\n  /* tslint:disable-next-line:directive-selector */\r\n  selector: 'mk-input-group-content'\r\n})\r\nexport class InputGroupContentDirective {}\r\n","import { Directive, Input, Renderer2, ElementRef, OnInit, HostListener } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { ColorService } from '../../color/color.service';\r\nimport { ClassService } from '../../services/class.service';\r\n\r\n// @TODO onFocus Color\r\n\r\n@Directive({\r\n  selector: '[mkInputText]',\r\n  providers: [ColorService, ClassService]\r\n})\r\nexport class InputTextDirective implements OnInit {\r\n  private defaultClass = 'form-control';\r\n  private isSetClass: boolean;\r\n  private _onKeyUp = new Subject<NgControl>();\r\n\r\n  public onKeyup: Observable<NgControl> = this._onKeyUp.asObservable();\r\n\r\n  @Input() set borderColor(color: string) {\r\n    this.colorService.setBackgroundColor(color, true, 'border-color', null);\r\n  }\r\n  @Input() set class(className: string) {\r\n    this.isSetClass = true;\r\n    this.classService.applyClasses(className);\r\n  }\r\n  @Input() set color(color: string) {\r\n    this.colorService.setFontColor(color);\r\n  }\r\n\r\n  /**\r\n   * @method constructor\r\n   * @param  elementRef   [description]\r\n   * @param  renderer2    [description]\r\n   * @param  ngControl    [description]\r\n   * @param  colorService [description]\r\n   * @param  classService [description]\r\n   */\r\n  constructor(\r\n    public elementRef: ElementRef,\r\n    public renderer2: Renderer2,\r\n    private ngControl: NgControl,\r\n    private colorService: ColorService,\r\n    private classService: ClassService\r\n  ) {}\r\n\r\n  /**\r\n   * @method ngOnInit\r\n   */\r\n  ngOnInit() {\r\n    if (!this.isSetClass) {\r\n      this.classService.applyClasses(this.defaultClass);\r\n    }\r\n  }\r\n\r\n  @HostListener('keyup') keyUpListener() {\r\n    this._onKeyUp.next(this.ngControl);\r\n  }\r\n}\r\n","import { Injectable, Renderer2, ElementRef } from '@angular/core';\r\n\r\n/*\r\n *\r\n */\r\n@Injectable()\r\nexport class ClassService {\r\n  private currentClasses: Array<string> = [];\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private renderer2: Renderer2\r\n  ) {}\r\n\r\n\r\n  public applyClasses(cssClasses: string | Array<string>): void {\r\n    if (typeof cssClasses === 'string') {\r\n      cssClasses = cssClasses.split(' ');\r\n    }\r\n\r\n    // Remove only classes that are not in cssClasses\r\n    const classesToRemove = this.currentClasses.filter(x => cssClasses.indexOf(x) === -1);\r\n    classesToRemove.forEach(cssClasse => {\r\n      if (cssClasse) {\r\n        this.renderer2.removeClass(this.elementRef.nativeElement, cssClasse);\r\n      }\r\n    });\r\n\r\n    // Add only classes that are not in currentClasses\r\n    const classesToAdd = cssClasses.filter(x => this.currentClasses.indexOf(x) === -1);\r\n    classesToAdd.forEach(cssClasse => {\r\n      if (cssClasse) {\r\n        this.renderer2.addClass(this.elementRef.nativeElement, cssClasse);\r\n      }\r\n    });\r\n\r\n    // Update current classes for futur updates\r\n    this.currentClasses = [... cssClasses];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { InputTextComponent } from './input-text.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: InputTextComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InputTextRoutingModule { }\r\n","<!--suppress ALL -->\r\n<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmitForm()\">\r\n  <mk-input-group inputErrorColor=\"warning\">\r\n    <mk-input-group-label>Input icons</mk-input-group-label>\r\n    <mk-input-group-addon-left>@</mk-input-group-addon-left>\r\n    <mk-input-group-addon-right><i [ngClass]=\"userForm.invalid ? 'fa fa-times' : 'fa fa-check'\"></i></mk-input-group-addon-right>\r\n    <mk-input-group-content>\r\n      <input mkInputText formControlName=\"firstName\" class=\"toto form-control\"/>\r\n    </mk-input-group-content>\r\n  </mk-input-group>\r\n  <br />\r\n  <button type=\"submit\" [disabled]=\"userForm.invalid\" class=\"btn btn-primary\">Soumettre</button>\r\n</form>\r\n<!--<div class=\"row\">\r\n  <div class=\"col-md-4 col-xs-12\">\r\n    <mk-box [isCollapsable]=\"false\" [isRemovable]=\"false\" header=\"Basic Input\">\r\n      <mk-input-text name=\"input-name\" [(ngModel)]=\"test\" #name=\"ngModel\" (ngModelChange)=\"onChange($event)\" #name=\"ngModel\" minlength=\"4\" maxlength=\"5\" required placeholder=\"placeholder\">\r\n        <mk-input-text-label>Input label {{test}}</mk-input-text-label>\r\n      </mk-input-text>\r\n    </mk-box>\r\n  </div>\r\n  <div class=\"col-md-4 col-xs-12\">\r\n    <mk-box [isCollapsable]=\"false\" [isRemovable]=\"false\" header=\"Input with addons\">\r\n      <mk-input-text name=\"name\" [(ngModel)]=\"test\" #name=\"ngModel\" (ngModelChange)=\"onChange($event)\" addonLeft=\"@\" addonRight=\"$\" #name=\"ngModel\" minlength=\"4\" maxlength=\"5\" required placeholder=\"toto\">\r\n        <mk-input-text-label>Input addons</mk-input-text-label>\r\n      </mk-input-text>\r\n    </mk-box>\r\n  </div>\r\n  <div class=\"col-md-4 col-xs-12\">\r\n    <mk-box [isCollapsable]=\"false\" [isRemovable]=\"false\" header=\"Input with icons\">\r\n      <mk-input-text name=\"name\" [(ngModel)]=\"test\" #name=\"ngModel\" (ngModelChange)=\"onChange($event)\" #name=\"ngModel\" minlength=\"4\" maxlength=\"5\" required placeholder=\"toto\">\r\n        <mk-input-text-label>Input icons</mk-input-text-label>\r\n        <mk-input-text-addon-left><i class=\"fa fa-warning\"></i></mk-input-text-addon-left>\r\n        <mk-input-text-addon-right><i class=\"fa fa-check\"></i></mk-input-text-addon-right>\r\n      </mk-input-text>\r\n    </mk-box>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <mk-box [isCollapsable]=\"false\" [isRemovable]=\"false\" header=\"Input width\">\r\n      <mk-input-text name=\"input-name\" [(ngModel)]=\"test\" #name=\"ngModel\" (ngModelChange)=\"onChange($event)\" #name=\"ngModel\" minlength=\"4\" maxlength=\"5\" required wrapperClasses=\"col-xs-6 form-group\" placeholder=\"placeholder\">\r\n        <mk-input-text-label>Input label {{test}}</mk-input-text-label>\r\n      </mk-input-text>\r\n      <mk-input-text name=\"input-name\" [(ngModel)]=\"test\" #name=\"ngModel\" (ngModelChange)=\"onChange($event)\" #name=\"ngModel\" minlength=\"4\" maxlength=\"5\" required wrapperClasses=\"col-xs-4 form-group\" placeholder=\"placeholder\">\r\n        <mk-input-text-label>Input label {{test}}</mk-input-text-label>\r\n        <mk-input-text-addon-left><i class=\"fa fa-warning\"></i></mk-input-text-addon-left>\r\n      </mk-input-text>\r\n      <mk-input-text name=\"input-name\" [(ngModel)]=\"test\" #name=\"ngModel\" (ngModelChange)=\"onChange($event)\" #name=\"ngModel\" minlength=\"4\" maxlength=\"5\" required wrapperClasses=\"col-xs-2 form-group\" placeholder=\"placeholder\">\r\n        <mk-input-text-label>Input label {{test}}</mk-input-text-label>\r\n      </mk-input-text>\r\n    </mk-box>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-4 col-xs-12\">\r\n    <mk-box [isCollapsable]=\"false\" [isRemovable]=\"false\" header=\"Basic Input\">\r\n      <mk-input-text name=\"input-name\" [(ngModel)]=\"test\" #name=\"ngModel\" (ngModelChange)=\"onChange($event)\" #name=\"ngModel\" minlength=\"4\" maxlength=\"5\" size=\"large\" required placeholder=\"placeholder\">\r\n        <mk-input-text-label>Large input {{test}}</mk-input-text-label>\r\n      </mk-input-text>\r\n    </mk-box>\r\n  </div>\r\n  <div class=\"col-md-4 col-xs-12\">\r\n    <mk-box [isCollapsable]=\"false\" [isRemovable]=\"false\" header=\"Input with addons\">\r\n      <mk-input-text name=\"input-name\" [(ngModel)]=\"test\" #name=\"ngModel\" (ngModelChange)=\"onChange($event)\" #name=\"ngModel\" minlength=\"4\" maxlength=\"5\" required placeholder=\"placeholder\">\r\n        <mk-input-text-label>Default input {{test}}</mk-input-text-label>\r\n        <mk-input-text-addon-left><i class=\"fa fa-warning\"></i></mk-input-text-addon-left>\r\n      </mk-input-text>\r\n    </mk-box>\r\n  </div>\r\n  <div class=\"col-md-4 col-xs-12\">\r\n    <mk-box [isCollapsable]=\"false\" [isRemovable]=\"false\" header=\"Input with icons\">\r\n      <mk-input-text name=\"input-name\" [(ngModel)]=\"test\" #name=\"ngModel\" (ngModelChange)=\"onChange($event)\" #name=\"ngModel\" minlength=\"4\" maxlength=\"5\" size=\"small\" required placeholder=\"placeholder\">\r\n        <mk-input-text-label>Small Input {{test}}</mk-input-text-label>\r\n      </mk-input-text>\r\n    </mk-box>\r\n  </div>\r\n</div>\r\n\r\n\r\n<mk-box>\r\n  <form>\r\n    <div class=\"row\">\r\n      <mk-input-text name=\"name\" [(ngModel)]=\"test\" #name=\"ngModel\" (ngModelChange)=\"onChange($event)\" addonRight=\"$\" #name=\"ngModel\" minlength=\"4\" maxlength=\"5\" required size=\"large\" placeholder=\"toto\" wrapperClasses=\"col-xs-3 form-group\">\r\n        <mk-input-text-label>Input with warning</mk-input-text-label>\r\n        <mk-input-text-addon-left><i class=\"fa fa-warning\"></i></mk-input-text-addon-left>\r\n      </mk-input-text>\r\n    </div>\r\n  </form>\r\n</mk-box>\r\n<div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"alert alert-danger\">\r\n  <div *ngIf=\"name.errors.required\">\r\n    Name is required.\r\n  </div>\r\n  <div *ngIf=\"name.errors.minlength\">\r\n    Name must be at least 4 characters long.\r\n  </div>\r\n  <div *ngIf=\"name.errors.maxlength\">\r\n    Name must be less than 6 characters long.\r\n  </div>\r\n</div>-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  templateUrl: './input-text.component.html',\r\n  styleUrls: ['./input-text.component.css']\r\n})\r\nexport class InputTextComponent implements OnInit {\r\n  userForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.userForm = this.formBuilder.group({\r\n      firstName: ['', [Validators.required, Validators.email]]\r\n    });\r\n  }\r\n\r\n  onSubmitForm() {\r\n    console.log(this.userForm);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { InputTextRoutingModule } from './input-text-routing.module';\r\nimport { InputTextComponent } from './input-text.component';\r\n\r\nimport { InputGroupModule, InputTextModule as mkInputTextModule, BoxModule } from 'angular-admin-lte';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BoxModule,\r\n    InputTextRoutingModule,\r\n    mkInputTextModule,\r\n    InputGroupModule\r\n  ],\r\n  declarations: [InputTextComponent]\r\n})\r\nexport class InputTextModule { }\r\n"],"sourceRoot":""}