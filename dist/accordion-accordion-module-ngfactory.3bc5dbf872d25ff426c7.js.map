{"version":3,"sources":["webpack:///./library/angular-admin-lte/src/lib/accordion/accordion.component.ts.AccordionHeaderComponent.html","webpack:///./library/angular-admin-lte/src/lib/accordion/accordion.component.ts.AccordionContentComponent.html","webpack:///./library/angular-admin-lte/src/lib/accordion/accordion.component.ts.AccordionComponent.html","webpack:///./library/angular-admin-lte/src/lib/accordion/accordion.component.html","webpack:///./library/angular-admin-lte/src/lib/accordion/accordion.component.ts","webpack:///./library/angular-admin-lte/src/lib/accordion/accordion.directive.ts","webpack:///./src/app/+accordion/accordion-routing.module.ts","webpack:///./src/app/+accordion/accordion.component.html","webpack:///./src/app/+accordion/accordion.component.ts","webpack:///./src/app/+accordion/accordion.module.ts"],"names":[],"mappings":"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","file":"accordion-accordion-module-ngfactory.3bc5dbf872d25ff426c7.js","sourcesContent":["<ng-template #templateRef><ng-content></ng-content></ng-template>","<ng-template #templateRef><ng-content></ng-content></ng-template>","<ng-template #templateRef><ng-content></ng-content></ng-template>","<div [ngClass]=\"styleClass\">\r\n  <div *ngFor=\"let accordion of accordionComponents\" class=\"panel box\" [mkColor]=\"accordion.borderColor\" mkColorProperty=\"border-top-color\" mkColorPrefix=\"box\">\r\n    <div [ngClass]=\"accordion.headerStyleClass\" [class.no-border]=\"accordion.isCollapsed && !accordion.isCollapsing\">\r\n      <h4 class=\"box-title\">\r\n        <a [mkAccordionToggle]=\"accordion\" href=\"#\" [mkFontColor]=\"accordion.headerStyleColor\" [class.collapsed]=\"accordion.isCollapsed\">\r\n          {{accordion.header}}\r\n          <ng-template *ngIf=\"!accordion.header\" [ngTemplateOutlet]=\"accordion.accordionHeaderComponent?.templateRef\"></ng-template>\r\n        </a>\r\n      </h4>\r\n    </div>\r\n    <div class=\"panel-collapse\" [mkCollapseAnimation]=\"accordion.isCollapsed\" (mkCollapseAnimation.start)=\"collapseStart($event, accordion)\" (mkCollapseAnimation.done)=\"collapseDone($event, accordion)\">\r\n      <div [ngClass]=\"accordion.contentStyleClass\" [mkFontColor]=\"accordion.contentColor\">\r\n        <ng-template [ngTemplateOutlet]=\"accordion.contentTemplateRef\"></ng-template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\n\r\nimport { AnimationEvent } from '../animations/animations.interface';\r\n\r\nimport { AccordionToggleDirective } from './accordion.directive';\r\n\r\nimport { removeListeners, removeSubscriptions } from '../helpers';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/*\r\n *\r\n */\r\n@Component({\r\n  selector: 'mk-accordion-header',\r\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'\r\n})\r\nexport class AccordionHeaderComponent {\r\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\r\n}\r\n\r\n\r\n/*\r\n *\r\n */\r\n@Component({\r\n  selector: 'mk-accordion-content',\r\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'\r\n})\r\nexport class AccordionContentComponent {\r\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\r\n}\r\n\r\n\r\n/*\r\n *\r\n */\r\n@Component({\r\n  selector: 'mk-accordion',\r\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'\r\n})\r\nexport class AccordionComponent implements OnInit {\r\n  public contentTemplateRef: TemplateRef<AccordionContentComponent>;\r\n  public headerStyleColor: string;\r\n  public isCollapsing: boolean;\r\n  public isCollapsed: boolean;\r\n  public index: number;\r\n\r\n  @Input() public borderColor: string;\r\n  @Input() public contentColor: string;\r\n  @Input() public contentStyleClass = 'box-body';\r\n  @Input() public header: string;\r\n  @Input() public headerColor: string;\r\n  @Input() public headerColorHover: string;\r\n  @Input() public headerStyleClass = 'box-header with-border';\r\n\r\n  @ContentChild(AccordionHeaderComponent) public accordionHeaderComponent: AccordionHeaderComponent;\r\n  @ContentChild(AccordionContentComponent) public accordionContentComponent: AccordionContentComponent;\r\n\r\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\r\n\r\n  /**\r\n   * @method ngOnInit\r\n   */\r\n  ngOnInit() {\r\n    this.headerStyleColor = this.headerColor;\r\n\r\n    if (!this.header && !this.accordionHeaderComponent) {\r\n      throw new Error('Attribute \"header\" OR Component \"mk-+accordion-header\" is required for component \"mk-+accordion\"');\r\n    }\r\n\r\n    if (this.accordionContentComponent) {\r\n      this.contentTemplateRef = this.accordionContentComponent.templateRef;\r\n    } else {\r\n      this.contentTemplateRef = this.templateRef;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*\r\n *\r\n */\r\n@Component({\r\n  selector: 'mk-accordion-group',\r\n  templateUrl: './accordion.component.html'\r\n})\r\nexport class AccordionGroupComponent implements AfterContentInit, AfterViewInit, OnChanges, OnDestroy {\r\n  private activeIndex: any = [0];\r\n  // @TODO change types for listeners to all files\r\n  private listeners: Array<Function> = [];\r\n  // @TODO change types for subscriptions to all files\r\n  private subscriptions: Array<Subscription> = [];\r\n\r\n\r\n  @Input('activeIndex') set _activeIndex(value) {\r\n    this.activeIndex = value instanceof Array ? value : [value];\r\n  }\r\n  @Input() public isMultiple: boolean;\r\n  @Input() public styleClass = 'box-group';\r\n\r\n  @Output() public onCollapseStart = new EventEmitter();\r\n  @Output() public onCollapseDone = new EventEmitter();\r\n\r\n  @ContentChildren(AccordionComponent) public accordionComponents: QueryList<AccordionComponent>;\r\n\r\n  @ViewChildren(AccordionToggleDirective) private accordionToggleDirectives: QueryList<AccordionToggleDirective>;\r\n\r\n  /**\r\n   * @method constructor\r\n   * @param changeDetectorRef [description]\r\n   * @param ngZone            [description]\r\n   * @param renderer2         [description]\r\n   */\r\n  constructor(\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private ngZone: NgZone,\r\n    private renderer2: Renderer2\r\n  ) {}\r\n\r\n  /**\r\n   * [headerMouseLeave description]\r\n   * @method headerMouseLeave\r\n   * @param accordion [description]\r\n   */\r\n  public static headerMouseLeave(accordion: AccordionComponent): void {\r\n    accordion.headerStyleColor = accordion.headerColor;\r\n  }\r\n\r\n  /**\r\n   * [headerMouseEnter description]\r\n   * @method headerMouseEnter\r\n   * @param accordion [description]\r\n   */\r\n  public static headerMouseEnter(accordion: AccordionComponent): void {\r\n    if (accordion.headerColorHover) {\r\n      accordion.headerStyleColor = accordion.headerColorHover;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method ngAfterViewInit\r\n   */\r\n  ngAfterContentInit() {\r\n    this.setAccordionsIndex();\r\n    this.updateAccordionIsCollapsed();\r\n\r\n    this.subscriptions.push(this.accordionComponents.changes.subscribe(() => {\r\n      this.setAccordionsIndex();\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * @method ngAfterViewInit\r\n   */\r\n  ngAfterViewInit() {\r\n    this.setAccordionsToggle();\r\n\r\n    this.subscriptions.push(this.accordionToggleDirectives.changes.subscribe(() => {\r\n      this.setAccordionsToggle();\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * [ngOnChanges description]\r\n   * @method ngOnChanges\r\n   * @param changes [description]\r\n   * @return [description]\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes._activeIndex.firstChange === false) {\r\n      this.updateAccordionIsCollapsed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method ngOnDestroy\r\n   */\r\n  ngOnDestroy() {\r\n    removeListeners(this.listeners);\r\n    removeSubscriptions(this.subscriptions);\r\n  }\r\n\r\n  /**\r\n   * [toggleAccordion description]\r\n   * @method toggleAccordion\r\n   * @param event       [description]\r\n   * @param toggleIndex [description]\r\n   */\r\n  public toggleAccordion(event: Event, toggleIndex: number): void {\r\n    event.preventDefault();\r\n\r\n    const indexOf = this.activeIndex['indexOf'](toggleIndex);\r\n    if (indexOf === -1) {\r\n      if (this.isMultiple) {\r\n        this.activeIndex.push(toggleIndex);\r\n      } else {\r\n        this.activeIndex = [toggleIndex];\r\n      }\r\n    } else {\r\n      if (this.isMultiple) {\r\n        this.activeIndex.splice(indexOf, 1);\r\n      } else {\r\n        this.activeIndex = [];\r\n      }\r\n    }\r\n    this.updateAccordionIsCollapsed();\r\n  }\r\n\r\n  /**\r\n   * [collapseStart description]\r\n   * @method collapseStart\r\n   * @param event [description]\r\n   * @param accordion [description]\r\n   */\r\n  public collapseStart(event: AnimationEvent, accordion: AccordionComponent): void {\r\n    accordion.isCollapsing = true;\r\n    this.onCollapseStart.emit({animationEvent: event, index: accordion.index});\r\n  }\r\n\r\n  /**\r\n   * [collapseDone description]\r\n   * @method collapseDone\r\n   * @param event [description]\r\n   * @param accordion [description]\r\n   */\r\n  public collapseDone(event: AnimationEvent, accordion: AccordionComponent): void {\r\n    accordion.isCollapsing = false;\r\n    this.onCollapseDone.emit({animationEvent: event, index: accordion.index});\r\n  }\r\n\r\n  /**\r\n   * [setAccordionsIndex description]\r\n   * @method setAccordionsIndex\r\n   */\r\n  private setAccordionsIndex(): void {\r\n    this.accordionComponents.forEach((accordion: AccordionComponent, index: number) => {\r\n      accordion.index = index;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * [setAccordionsToggle description]\r\n   * @method setAccordionsToggle\r\n   */\r\n  private setAccordionsToggle(): void {\r\n    this.listeners = removeListeners(this.listeners);\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.accordionToggleDirectives.forEach((accordionToggle: AccordionToggleDirective) => {\r\n        this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'click', (event) => {\r\n          this.toggleAccordion(event, accordionToggle.accordionComponent.index);\r\n          this.changeDetectorRef.detectChanges();\r\n        }));\r\n        this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'mouseenter', () => {\r\n          AccordionGroupComponent.headerMouseEnter(accordionToggle.accordionComponent);\r\n          this.changeDetectorRef.detectChanges();\r\n        }));\r\n        this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'mouseleave', () => {\r\n          AccordionGroupComponent.headerMouseLeave(accordionToggle.accordionComponent);\r\n          this.changeDetectorRef.detectChanges();\r\n        }));\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * [updateAccordionIsCollapsed description]\r\n   * @method updateAccordionIsCollapsed\r\n   */\r\n  private updateAccordionIsCollapsed(): void {\r\n    this.accordionComponents.forEach((accordion: AccordionComponent, index: number) => {\r\n      accordion.isCollapsed = this.activeIndex.indexOf(index) === -1;\r\n    });\r\n  }\r\n}\r\n","import { Directive, Input, ElementRef } from '@angular/core';\r\n\r\n/*\r\n *\r\n */\r\n@Directive({\r\n  selector: '[mkAccordionToggle]'\r\n})\r\nexport class AccordionToggleDirective {\r\n  @Input('mkAccordionToggle') accordionComponent;\r\n\r\n  /**\r\n   * @method constructor\r\n   * @param elementRef [description]\r\n   */\r\n  constructor(\r\n    public elementRef: ElementRef\r\n  ) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AccordionComponent } from './accordion.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: AccordionComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccordionRoutingModule { }\r\n","<div class=\"row\">\r\n  <div class=\"col-md-6 col-xs-12\">\r\n    <mk-box [isSolid]=\"true\" boxColor=\"#fff\" [isCollapsable]=\"false\" [isRemovable]=\"false\" header=\"Collapsible Accordion\">\r\n      <mk-accordion-group>\r\n        <mk-accordion header=\"Collapsible Group Item #1\" headerColor=\"red\" headerColorHover=\"yellow\" contentColor=\"green\" borderColor=\"info\" >\r\n          Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n        </mk-accordion>\r\n        <mk-accordion header=\"Collapsible Group Danger\" borderColor=\"danger\">\r\n          Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n        </mk-accordion>\r\n        <mk-accordion header=\"Collapsible Group Success\" borderColor=\"success\">\r\n          Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n        </mk-accordion>\r\n      </mk-accordion-group>\r\n    </mk-box>\r\n  </div>\r\n  <div class=\"col-md-6 col-xs-12\">\r\n    <mk-box [isSolid]=\"true\"  boxColor=\"#fff\" [isCollapsable]=\"false\" [isRemovable]=\"false\" header=\"Collapsible Accordion Multiple\">\r\n      <mk-accordion-group [isMultiple]=\"true\" [activeIndex]=\"activeIndex\">\r\n        <mk-accordion header=\"Collapsible Group Danger\" borderColor=\"danger\">\r\n          Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n        </mk-accordion>\r\n        <mk-accordion header=\"Collapsible Group Warning\" borderColor=\"warning\">\r\n          Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n        </mk-accordion>\r\n        <mk-accordion header=\"Collapsible Group Success\" borderColor=\"primary\">\r\n          Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n        </mk-accordion>\r\n      </mk-accordion-group>\r\n    </mk-box>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-6 col-xs-12\">\r\n    <mk-box header=\"Accordion with Text header\" [isCollapsable]=\"false\" [isRemovable]=\"false\">\r\n      <pre><code class=\"language-html\">&lt;mk-accordion-group [isMultiple]=\"true\"&gt;\r\n  &lt;mk-accordion header=\"Collapsible Group Item #1\"&gt;\r\n    Accorion content.\r\n  &lt;/mk-accordion&gt;\r\n  &lt;mk-accordion header=\"Collapsible Group Danger\" borderColor=\"danger\"&gt;\r\n    Accorion content.\r\n  &lt;/mk-accordion&gt;\r\n&lt;/mk-accordion-group&gt;</code></pre>\r\n    </mk-box>\r\n  </div>\r\n  <div class=\"col-md-6 col-xs-12\">\r\n    <mk-box header=\"Accordion with HTML header\" [isCollapsable]=\"false\" [isRemovable]=\"false\">\r\n      <pre><code class=\"language-html\">&lt;mk-accordion-group&gt;\r\n  &lt;mk-accordion&gt;\r\n    &lt;mk-accordion-header&gt;Accordion HTML header&lt;/mk-accordion-header&gt;\r\n    &lt;mk-accordion-content&gt;Accorion text.&lt;/mk-accordion-content&gt;\r\n  &lt;/mk-accordion&gt;\r\n  &lt;mk-accordion&gt;\r\n    &lt;mk-accordion-header&gt;Accordion HTML header&lt;/mk-accordion-header&gt;\r\n    &lt;mk-accordion-content&gt;Accorion content.&lt;/mk-accordion-content&gt;\r\n  &lt;/mk-accordion&gt;\r\n&lt;/mk-accordion-group&gt;</code></pre>\r\n    </mk-box>\r\n  </div>\r\n</div>\r\n\r\n<!--suppress HtmlUnknownAttribute -->\r\n<mk-box header=\"Accordion Group Properties\" [isCollapsable]=\"true\" [isRemovable]=\"false\" contentClasses=\"table-responsive\">\r\n  <table class=\"table table-bordered table-hover\">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td>activeIndex</td>\r\n        <td>boolean</td>\r\n        <td>false</td>\r\n        <td>Index of the active tab or an array of indexes to change selected accordion programmatically.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>isMultiple</td>\r\n        <td>boolean</td>\r\n        <td>false</td>\r\n        <td>Defines if multiple accordion can be opened.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>styleClass</td>\r\n        <td>string</td>\r\n        <td>box-group</td>\r\n        <td>Style class of the component.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</mk-box>\r\n\r\n<!--suppress HtmlUnknownAttribute -->\r\n<mk-box header=\"Accordion Group Events\" [isCollapsable]=\"true\" [isRemovable]=\"false\" contentClasses=\"table-responsive\">\r\n  <table class=\"table table-bordered table-hover\">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Parameters</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td>onCollapseDone</td>\r\n        <td>event.animationEvent: animation event<br/> event.index: Index of the accordion</td>\r\n        <td>Callback to invoke after accordion toggle.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>onCollapseStart</td>\r\n        <td>event.animationEvent: animation event<br/> event.index: Index of the accordion</td>\r\n        <td>Callback to invoke before accordion toggle.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</mk-box>\r\n\r\n<!--suppress HtmlUnknownAttribute -->\r\n<mk-box header=\"Accordion Properties\" [isCollapsable]=\"true\" [isRemovable]=\"false\" contentClasses=\"table-responsive\">\r\n  <table class=\"table table-bordered table-hover\">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td>borderColor</td>\r\n        <td>string (default | primary | success | info | warning | danger | rgb | rgba | hex)</td>\r\n        <td>default</td>\r\n        <td>The accordion border top color.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>contentColor</td>\r\n        <td>string (green | aqua | light-blue | red | yellow | mutted | rgb | rgba | hex)</td>\r\n        <td>null</td>\r\n        <td>The accordion content font color.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>contentStyleClass</td>\r\n        <td>string</td>\r\n        <td>box-body</td>\r\n        <td>The accordion content Style classes.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>header</td>\r\n        <td>string</td>\r\n        <td>null</td>\r\n        <td>\r\n          Header text of the panel.<br/>\r\n          <em>Note: You can use &lt;mk-accordion-header&gt; for HTML header.</em>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>headerColor</td>\r\n        <td>string (green | aqua | light-blue | red | yellow | mutted | rgb | rgba | hex)</td>\r\n        <td>null</td>\r\n        <td>The accordion header font color.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>headerColorHover</td>\r\n        <td>string (green | aqua | light-blue | red | yellow | mutted | rgb | rgba | hex)</td>\r\n        <td>null</td>\r\n        <td>The accordion header font color on hover.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>headerStyleClass</td>\r\n        <td>string</td>\r\n        <td>box-header with-border</td>\r\n        <td>The accorion header style classes.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</mk-box>\r\n","import {Component, AfterViewInit, NgZone, ChangeDetectorRef, ViewRef} from '@angular/core';\r\n\r\nimport * as Prism from 'prismjs';\r\n\r\n@Component({\r\n  selector: 'app-accordion',\r\n  templateUrl: './accordion.component.html',\r\n  styleUrls: ['./accordion.component.css']\r\n})\r\nexport class AccordionComponent implements AfterViewInit {\r\n  public activeIndex: any = 0;\r\n\r\n  /**\r\n   *\r\n   * @param {NgZone} ngZone\r\n   * @param {ChangeDetectorRef} changeDetectorRef\r\n   */\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /**\r\n   * @method ngAfterViewInit\r\n   */\r\n  ngAfterViewInit() {\r\n    Prism.highlightAll();\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        this.activeIndex = [1, 2, 3];\r\n        if (! (this.changeDetectorRef as ViewRef).destroyed) {\r\n          this.changeDetectorRef.detectChanges();\r\n        }\r\n      }, 500);\r\n    });\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccordionRoutingModule } from './accordion-routing.module';\r\nimport { AccordionComponent } from './accordion.component';\r\n\r\nimport { AccordionModule as MkAccordionModule, BoxModule } from 'angular-admin-lte';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AccordionRoutingModule,\r\n    MkAccordionModule,\r\n    BoxModule\r\n  ],\r\n  declarations: [AccordionComponent]\r\n})\r\nexport class AccordionModule { }\r\n"],"sourceRoot":""}