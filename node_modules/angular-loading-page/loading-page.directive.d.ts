import { TemplateRef, ViewContainerRef, OnChanges, SimpleChange } from '@angular/core';
import { HttpObservableService } from './interceptors/http-observable.service';
import { RouteInterceptorService } from './interceptors/route-interceptor.service';
export interface MkLoadingPage {
    checkPendingHttp: boolean;
    checkPendingRoute: boolean;
}
export declare class LoadingPageDirective implements OnChanges {
    private httpObservableService;
    private routeInterceptorService;
    private templateRef;
    private viewContainer;
    isPendingRequests: boolean;
    isPendingRoute: boolean;
    private hasView;
    mkLoadingPage: MkLoadingPage;
    /**
     * @method constructor
     * @param privatehttpObservableService   [description]
     * @param privaterouteInterceptorService [description]
     * @param privatetemplateRef             [description]
     * @param privateviewContainer           [description]                                              [description]
     */
    constructor(httpObservableService: HttpObservableService, routeInterceptorService: RouteInterceptorService, templateRef: TemplateRef<any>, viewContainer: ViewContainerRef);
    /**
     * @method ngOnChanges
     * @param changes [description]
     */
    ngOnChanges(changes: {
        [propKey: string]: SimpleChange;
    }): void;
    /**
     * [init description]
     * @method init
     * @return [description]
     */
    private init();
    /**
     * [isVisible description]
     * @method isVisible
     * @return [description]
     */
    private isVisible();
}
