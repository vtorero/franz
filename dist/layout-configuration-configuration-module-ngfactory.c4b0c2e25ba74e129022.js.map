{"version":3,"sources":["webpack:///./src/app/+layout/configuration/configuration-routing.module.ts","webpack:///./src/app/+layout/configuration/configuration.component.html","webpack:///./src/app/+layout/configuration/configuration.component.ts","webpack:///./src/app/+layout/configuration/configuration.module.ts"],"names":[],"mappings":"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","file":"layout-configuration-configuration-module-ngfactory.c4b0c2e25ba74e129022.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ConfigurationComponent } from './configuration.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: ConfigurationComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ConfigurationRoutingModule { }\r\n","<mk-box header=\"Configuring Layout\" [isCollapsable]=\"false\" [isRemovable]=\"false\">\r\n  <p>If can use the layout components or just use the presentation components of angular-admin-lte.</p>\r\n  <p> If you chose to use the layout you will need to:</p>\r\n  <ol>\r\n    <li>Create a layout configuration file.</li>\r\n    <li>Import the layout module and provide the layout configuration in your main app module.</li>\r\n    <li>Update the main app view.</li>\r\n  </ol>\r\n</mk-box>\r\n\r\n\r\n<mk-box header=\"Configuration File\" [isCollapsable]=\"false\" [isRemovable]=\"false\">\r\n  <pre><code class=\"language-typescript\" ngNonBindable>export var adminLteConf = &#123;\r\n  skin: 'blue',\r\n  ...\r\n  sidebarLeftMenu: [\r\n    &#123;label: 'Start', route: '/', iconClasses: 'fa fa-th'&#125;,\r\n    ...\r\n  ]\r\n&#125;;\r\n</code></pre>\r\n</mk-box>\r\n\r\n<mk-box header=\"Import Conf And Module\" [isCollapsable]=\"false\" [isRemovable]=\"false\">\r\n  <pre><code class=\"language-typescript\">import &#123; adminLteConf &#125; from './admin-lte.conf';   //Import the layout configuration.\r\nimport &#123; LayoutModule &#125; from 'angular-admin-lte';   //Import the layout module.\r\n\r\n@NgModule(&#123;\r\n  imports: [\r\n    ...\r\n    LayoutModule.forRoot(adminLteConf),   //Provide the configuration to the layout module.\r\n  ],\r\n  ...\r\n&#125;)\r\nexport class AppModule &#123;&#125;\r\n</code></pre>\r\n</mk-box>\r\n\r\n<mk-box header=\"App view HTML\" [isCollapsable]=\"false\" [isRemovable]=\"false\">\r\n  <pre><code class=\"language-html\">&lt;mk-layout-wrapper&gt;\r\n  &lt;mk-layout-sidebar-right&gt;\r\n    Sidebar right HTML\r\n  &lt;/mk-layout-sidebar-right&gt;\r\n  &lt;mk-layout-header&gt;\r\n    &lt;mk-layout-header-logo&gt;Logo HTML&lt;/mk-layout-header-logo&gt;\r\n    &lt;mk-layout-header-logo-mini&gt;Logo Mini HTML&lt;/mk-layout-header-logo-mini&gt;\r\n    Header HTML\r\n  &lt;/mk-layout-header&gt;\r\n  &lt;mk-layout-sidebar-left&gt;\r\n    Sidebar left HTML (just above menu)\r\n  &lt;/mk-layout-sidebar-left&gt;\r\n  &lt;mk-layout-content&gt;\r\n    &lt;router-outlet&gt;&lt;/router-outlet&gt;\r\n  &lt;/mk-layout-content&gt;\r\n  &lt;mk-layout-footer&gt;\r\n    &lt;mk-layout-footer-left&gt;\r\n      Footer left HTML\r\n    &lt;/mk-layout-footer-left&gt;\r\n    &lt;mk-layout-footer-right&gt;\r\n      Footer right HTML\r\n    &lt;/mk-layout-footer-right&gt;\r\n  &lt;/mk-layout-footer&gt;\r\n&lt;/mk-layout-wrapper&gt;\r\n</code></pre>\r\n</mk-box>\r\n\r\n<mk-box header=\"Configuration properties\" [isCollapsable]=\"true\" [isRemovable]=\"false\" contentStyleClasses=\"table-responsive\">\r\n  <table class=\"table table-bordered table-hover\">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Default</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td>skin</td>\r\n        <td>string ('blue' | 'black' | 'purple' | 'green' | 'red' | 'yellow' | 'blue-light' | 'black-light' | 'purple-light' | 'green-light' | 'red-light' | 'yellow-light')</td>\r\n        <td>'blue'</td>\r\n        <td>Set the theme skin.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>isSidebarLeftCollapsed</td>\r\n        <td>boolean</td>\r\n        <td>false</td>\r\n        <td>Defines if the sidebar left is collapsed.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>isSidebarLeftExpandOnOver</td>\r\n        <td>boolean</td>\r\n        <td>false</td>\r\n        <td>Define if sidebar left expand on mouse over.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>isSidebarLeftMini</td>\r\n        <td>boolean</td>\r\n        <td>false</td>\r\n        <td>Define if sidebar left minified is visible.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>sidebarRightSkin</td>\r\n        <td>string ('dark' | 'light')</td>\r\n        <td>'dark'</td>\r\n        <td>Set the sidebar right skin.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>isSidebarRightCollapsed</td>\r\n        <td>boolean</td>\r\n        <td>true</td>\r\n        <td>Defines if the sidebar right is collapsed.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>isSidebarRightOverContent</td>\r\n        <td>boolean</td>\r\n        <td>true</td>\r\n        <td>Defines if sidebar right slide over content.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>layout</td>\r\n        <td>string ('normal' | 'boxed' | 'fixed')</td>\r\n        <td>'normal'</td>\r\n        <td>Define the layout style.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</mk-box>\r\n\r\n<mk-box header=\"Layout setters\" [isCollapsable]=\"false\" [isRemovable]=\"false\">\r\n  <table class=\"table table-bordered table-hover\">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Parameters</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td>sidebarLeftCollapsed()</td>\r\n        <td>boolean</td>\r\n        <td>Programmatically set if sidebar left is collapsed.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>sidebarLeftExpandOnOver()</td>\r\n        <td>boolean</td>\r\n        <td>Programmatically set if sidebar left expand on over.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>sidebarLeftExpandOnOver()</td>\r\n        <td>boolean</td>\r\n        <td>Programmatically set if sidebar left expand on over.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>setSidebarRightSkin()</td>\r\n        <td>'dark' | 'light'</td>\r\n        <td>Programmatically defines sidebar right skin.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>sidebarLeftMini()</td>\r\n        <td>boolean</td>\r\n        <td>Programmatically set if sidebar left collapsed is visible.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>sidebarRightCollapsed()</td>\r\n        <td>boolean</td>\r\n        <td>Programmatically set if sidebar right is collapsed.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>sidebarRightOverContent()</td>\r\n        <td>boolean</td>\r\n        <td>Programmatically set if sidebar right slide over content.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>setSidebarLeftMenu()</td>\r\n        <td>Array</td>\r\n        <td>Update sidebar right menu.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>setLayout()</td>\r\n        <td>string</td>\r\n        <td>Update layout style.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>setSkin()</td>\r\n        <td>string</td>\r\n        <td>Update theme skin.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</mk-box>\r\n\r\n<mk-box header=\"Layout subscriptions\" [isCollapsable]=\"false\" [isRemovable]=\"false\">\r\n  <table class=\"table table-bordered table-hover\">\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Parameters</th>\r\n        <th>Description</th>\r\n      </tr>\r\n      <tr>\r\n        <td>isSidebarLeftCollapsed</td>\r\n        <td>Observable&lt;boolean&gt;</td>\r\n        <td>Subscribe to sidebar left collapse status.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>isSidebarLeftExpandOnOver</td>\r\n        <td>Observable&lt;boolean&gt;</td>\r\n        <td>Subscribe to sidebar left expand on over status.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>isSidebarLeftMini</td>\r\n        <td>Observable&lt;boolean&gt;</td>\r\n        <td>Subscribe to sidebar left mini status.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>sidebarRightSkin</td>\r\n        <td>Observable&lt;string&gt;</td>\r\n        <td>Subscribe to sidebar right skin.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>isSidebarRightCollapsed</td>\r\n        <td>Observable&lt;boolean&gt;</td>\r\n        <td>Subscribe to sidebar right collapsed status.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>isSidebarRightOverContent</td>\r\n        <td>Observable&lt;Array&gt;</td>\r\n        <td>Subscribe to sidebar right over content status.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>layout</td>\r\n        <td>Observable&lt;string&gt;</td>\r\n        <td>Subscribe to layout style changes.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>skin</td>\r\n        <td>Observable&lt;string&gt;</td>\r\n        <td>Subscribe to theme skin changes.</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</mk-box>\r\n","import { Component, AfterViewInit } from '@angular/core';\r\n\r\nimport * as Prism from 'prismjs';\r\n\r\n@Component({\r\n  selector: 'app-configuration',\r\n  templateUrl: './configuration.component.html'\r\n})\r\nexport class ConfigurationComponent implements AfterViewInit {\r\n  /**\r\n   * @method ngAfterViewInit\r\n   */\r\n  ngAfterViewInit() {\r\n    Prism.highlightAll();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ConfigurationRoutingModule } from './configuration-routing.module';\r\nimport { ConfigurationComponent } from './configuration.component';\r\n\r\nimport { BoxModule } from 'angular-admin-lte';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ConfigurationRoutingModule,\r\n    BoxModule\r\n  ],\r\n  declarations: [ConfigurationComponent]\r\n})\r\nexport class ConfigurationModule { }\r\n"],"sourceRoot":""}