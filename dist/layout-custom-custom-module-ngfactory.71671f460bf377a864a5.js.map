{"version":3,"sources":["webpack:///./src/app/+layout/custom/custom-routing.module.ts","webpack:///./src/app/+layout/custom/custom.component.html","webpack:///./src/app/+layout/custom/custom.component.ts","webpack:///./src/app/+layout/custom/custom.module.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAuD;AAEF;AAErD,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iEAAe;KAC3B,CAAC,CAAC;AAEH;IAAA;IAImC,CAAC;IAAD,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qGCdpC,orCAEyB,MAAI,kHAAG,4JAA+E;;;gZAAuB,iFAAK,MAAI,6EAAK;;;iZAA0B,oFAAQ,MAAI,+EAAO,MAAmB,grCAA6E,MAAI,mHAAG,mLAAsG,MAAQ,qHAAK,8JAAkC,siBAA2gB,MAAmB,oHAAK,KAAI,mHAAG,kHAAqC,MAAQ,qHAAK,wJAA4B,iSAAkQ,MAAiB,oHAAK,KAAE,mHAAG,kGAAqB,MAAM,qHAAK,8JAAkC,qOAA4K,2BAFxjD,qCAA4B,EACpC,qBACE,EAAC,qBAAqB,EAFxB,YAEyB,EAFjB,SAA4B,EACpC,SACE,EAAC,SAAqB,GAA0F,wBAAmB,EAAtB,YAAuB,EAApB,SAAmB,GAAkB,2BAAsB,EAAzB,aAA0B,EAAvB,SAAsB,GAA+C,+BAAsB,EAAC,sBAAuB,EAAC,sBAAqB,EAA5E,aAA6E,EAArE,SAAsB,EAAC,UAAuB,EAAC,UAAqB,2BAAjL,oMAAuB,GAAc,uMAA0B;;;;;;;;;;;;;;;;ACF9K;AAAA;AAAA;AAAA;AAAA;AAAyD;AAExB;AAEjC;IAAA;IAWA,CAAC;IANC;;OAEG;IACH,yCAAe,GAAf;QACE,oDAAkB,EAAE,CAAC;IACvB,CAAC;IACH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACND;AAAA;AAAA;IAAA;IAS4B,CAAC;IAAD,mBAAC;AAAD,CAAC","file":"layout-custom-custom-module-ngfactory.71671f460bf377a864a5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CustomComponent } from './custom.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: CustomComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomRoutingModule { }\r\n","<mk-box header=\"About custom layout\" [isCollapsable]=\"false\" [isRemovable]=\"false\">\r\n  <p>You can completely disable layout components to create custom page layout like <a routerLink=\"/login\">Login</a> and <a routerLink=\"/register\">Register</a> pages.</p>\r\n</mk-box>\r\n\r\n<mk-box header=\"Configuration\" [isCollapsable]=\"false\" [isRemovable]=\"false\">\r\n  <p>First you will need to import LayoutService and subscribe to isCustomLayout in the main app component:</p>\r\n  <pre><code class=\"language-typescript\">import &#123; Component, OnInit } from '@angular/core';\r\nimport &#123; LayoutService } from '../../../src';\r\n\r\n@Component(&#123;\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n&#125;)\r\nexport class AppComponent implements OnInit &#123;\r\n  public isCustomLayout: boolean;\r\n\r\n  constructor(\r\n    private layoutService: LayoutService\r\n  ) &#123;&#125;\r\n\r\n  ngOnInit() &#123;\r\n    this.layoutService.isCustomLayout.subscribe((value: boolean) => &#123;\r\n      this.isCustomLayout = value;\r\n    &#125;);\r\n  }\r\n}</code></pre>\r\n\r\n  <br/>\r\n  <p>Wrap the main component html like so:</p>\r\n  <pre><code class=\"language-html\">&lt;ng-container *ngIf=\"isCustomLayout else noCustomLayout\"&gt;\r\n  &lt;router-outlet&gt;&lt;/router-outlet&gt;\r\n&lt;/ng-container&gt;\r\n&lt;ng-template #layoutEnabled&gt;\r\n  &lt;mk-layout-wrapper&gt;\r\n    ...\r\n  &lt;/mk-layout-wrapper&gt;\r\n&lt;ng-template&gt;</code></pre>\r\n\r\n<br/>\r\n<p>Configure the router:</p>\r\n<pre><code class=\"language-typescript\">\r\n  ...\r\n  , &#123;\r\n    path: 'login',\r\n    loadChildren: 'app/login/login.module#LoginModule',\r\n    data: &#123;\r\n      customLayout: true\r\n    &#125;\r\n  &#125;,\r\n  ...\r\n</code></pre>\r\n</mk-box>\r\n","import { Component, AfterViewInit } from '@angular/core';\r\n\r\nimport * as Prism from 'prismjs';\r\n\r\n@Component({\r\n  templateUrl: './custom.component.html',\r\n  styleUrls: ['./custom.component.css']\r\n})\r\nexport class CustomComponent implements AfterViewInit {\r\n  /**\r\n   * @method ngAfterViewInit\r\n   */\r\n  ngAfterViewInit() {\r\n    Prism.highlightAll();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { CustomRoutingModule } from './custom-routing.module';\r\nimport { CustomComponent } from './custom.component';\r\n\r\nimport { BoxModule } from 'angular-admin-lte';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    CustomRoutingModule,\r\n    BoxModule\r\n  ],\r\n  declarations: [CustomComponent]\r\n})\r\nexport class CustomModule { }\r\n"],"sourceRoot":""}